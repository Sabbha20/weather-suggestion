{"version":3,"sources":["SeasonDisplay.js","index.js"],"names":["seasonConfig","summer","text","iconDisplay","winter","SeasonDisplay","props","latitude","month","season","lat","Date","getMonth","className","App","state","errorMsg","window","navigator","geolocation","getCurrentPosition","pos","setState","coords","err","message","this","renderContent","Component","ReactDOM","render","document","querySelector"],"mappings":"6LAWMA,G,MAAe,CACpBC,OAAQ,CACPC,KAAM,8BACNC,YAAa,OAEdC,OAAQ,CACPF,KAAM,qBACNC,YAAa,eAiBAE,EAbO,SAACC,GACtB,IApBmBC,EAAUC,EAoBvBC,GApBaF,EAoBOD,EAAMI,KApBHF,GAoBQ,IAAIG,MAAOC,YAnBpC,GAAKJ,EAAQ,EACjBD,EAAW,EAAI,SAAW,SAE1BA,EAAW,EAAI,SAAW,UAeF,EAEFP,EAAaS,GAAnCP,EAFwB,EAExBA,KAAMC,EAFkB,EAElBA,YAEd,OACC,sBAAKU,UAAS,yBAAoBJ,GAAlC,UACC,mBAAGI,UAAS,6BAAwBV,EAAxB,WACZ,+BAAKD,EAAL,OACA,mBAAGW,UAAS,8BAAyBV,EAAzB,eCzBTW,E,4MACLC,MAAQ,CACPL,IAAK,KACLM,SAAU,I,kEAGU,IAAD,OACnBC,OAAOC,UAAUC,YAAYC,oBAC5B,SAACC,GACA,EAAKC,SAAS,CACbZ,IAAKW,EAAIE,OAAOhB,cAGlB,SAACiB,GACA,EAAKF,SAAS,CACbN,SAAUQ,EAAIC,e,sCAOjB,OAAIC,KAAKX,MAAML,MAAQgB,KAAKX,MAAMC,SAEhC,8BACC,cAAC,EAAD,CAAeN,IAAKgB,KAAKX,MAAML,SAK7BgB,KAAKX,MAAML,KAAOgB,KAAKX,MAAMC,SAEhC,gCACC,+CADD,UAESU,KAAKX,MAAMC,YAMrB,8BACC,kDACgB,mBAAGH,UAAU,gC,+BAO/B,OAAO,8BAAMa,KAAKC,sB,GAjDFC,aAqDlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.a1041b87.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css';\r\n\r\nconst getSeasons = (latitude, month) => {\r\n\tif (month > 2 && month < 9) {\r\n\t\treturn latitude > 0 ? 'summer' : 'winter';\r\n\t} else {\r\n\t\treturn latitude > 0 ? 'winter' : 'summer';\r\n\t}\r\n};\r\n\r\nconst seasonConfig = {\r\n\tsummer: {\r\n\t\ttext: \"Let's hit the beach dude!!!\",\r\n\t\ticonDisplay: 'sun',\r\n\t},\r\n\twinter: {\r\n\t\ttext: 'Burr its chilly!!!',\r\n\t\ticonDisplay: 'snowflake',\r\n\t},\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n\tconst season = getSeasons(props.lat, new Date().getMonth());\r\n\tconst { text, iconDisplay } = seasonConfig[season]; //text, iconDiaplay\r\n\r\n\treturn (\r\n\t\t<div className={`season-display ${season}`}>\r\n\t\t\t<i className={` icon-left massive ${iconDisplay} icon`}></i>\r\n\t\t\t<h1>{text} </h1>\r\n\t\t\t<i className={` icon-right massive ${iconDisplay} icon`}></i>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport SeasonDisplay from './SeasonDisplay';\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tlat: null,\r\n\t\terrorMsg: '',\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.navigator.geolocation.getCurrentPosition(\r\n\t\t\t(pos) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlat: pos.coords.latitude,\r\n\t\t\t\t});\r\n\t\t\t}, //console.log(pos),\r\n\t\t\t(err) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terrorMsg: err.message,\r\n\t\t\t\t});\r\n\t\t\t}, //console.log(err),\r\n\t\t);\r\n\t}\r\n\r\n\trenderContent() {\r\n\t\tif (this.state.lat && !this.state.errorMsg) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<SeasonDisplay lat={this.state.lat} />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (!this.state.lat && this.state.errorMsg) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>Hi Seasons!!!</h3>\r\n\t\t\t\t\tError: {this.state.errorMsg}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tLoading Season <i className='spinner loading icon'></i>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <div>{this.renderContent()}</div>;\r\n\t}\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}